<?php
/**
 * Defines the BooleanUtilTest class
 */

namespace DominionEnterprises\Tests;
use DominionEnterprises\BooleanUtil as B;

/**
 * Test class for \DominionEnterprises\BooleanUtil.
 * Generated by PHPUnit on 2012-06-15 at 14:43:58.
 */
final class BooleanUtilTest extends \PHPUnit_Framework_TestCase
{
    public function testParseThrowsUnexpectedValueExceptionWithInvalidString()
    {
        $this->setExpectedException('UnexpectedValueException');
        B::parse('invalid');
    }

    public function testParseThrowsInvalidArgumentExceptionWithNonString()
    {
        $this->setExpectedException('InvalidArgumentException');
        B::parse(1);
    }

    public function testParse()
    {
        $this->assertTrue(B::parse(true));
        $this->assertTrue(B::parse('true'));
        $this->assertTrue(B::parse('TRUE'));
        $this->assertFalse(B::parse(false));
        $this->assertFalse(B::parse('false'));
        $this->assertFalse(B::parse('FALSE'));
    }

    public function testTryParse()
    {
        $result = null;
        $this->assertFalse(B::tryParse('Invalid', $result));
        $this->assertTrue($result === null);

        $result = null;
        $this->assertFalse(B::tryParse(123, $result));
        $this->assertTrue($result === null);

        $result = null;
        $this->assertTrue(B::tryParse('true', $result));
        $this->assertTrue($result === true);

        $result = null;
        $this->assertTrue(B::tryParse('TRUE', $result));
        $this->assertTrue($result === true);

        $result = null;
        $this->assertTrue(B::tryParse(true, $result));
        $this->assertTrue($result === true);

        $result = null;
        $this->assertTrue(B::tryParse('false', $result));
        $this->assertTrue($result === false);

        $result = null;
        $this->assertTrue(B::tryParse('FALSE', $result));
        $this->assertTrue($result === false);

        $result = null;
        $this->assertTrue(B::tryParse(false, $result));
        $this->assertTrue($result === false);
    }
}
